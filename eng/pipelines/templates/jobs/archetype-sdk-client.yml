jobs:
- job: BuildTest
  strategy:
    matrix:
      Linux_x64_Build:
        vm.image: 'ubuntu-18.04'
        vcpkg.deps: 'curl[ssl]'
        VCPKG_DEFAULT_TRIPLET: 'x64-linux'
        UNIT_TESTING: OFF
      Win_x86_Build:
        vm.image: 'windows-2019'
        vcpkg.deps: 'curl[winssl]'
        VCPKG_DEFAULT_TRIPLET: 'x86-windows-static'
        CMAKE_GENERATOR: 'Visual Studio 16 2019'
        CMAKE_GENERATOR_PLATFORM: Win32
        UNIT_TESTING: OFF
      Win_x64_Build:
        vm.image: 'windows-2019'
        vcpkg.deps: 'curl[winssl]'
        VCPKG_DEFAULT_TRIPLET: 'x64-windows-static'
        CMAKE_GENERATOR: 'Visual Studio 16 2019'
        CMAKE_GENERATOR_PLATFORM: x64
        UNIT_TESTING: OFF
      MacOS_x64_Build:
        vm.image: 'macOS-10.14'
        vcpkg.deps: 'curl[ssl]'
        VCPKG_DEFAULT_TRIPLET: 'x64-osx'
        UNIT_TESTING: OFF

      Linux_x64_Test:
        vm.image: 'ubuntu-18.04'
        vcpkg.deps: 'curl[ssl] cmocka'
        VCPKG_DEFAULT_TRIPLET: 'x64-linux'
        UNIT_TESTING: ON
      Win_x86_Test:
        vm.image: 'windows-2019'
        vcpkg.deps: 'curl[winssl] cmocka'
        VCPKG_DEFAULT_TRIPLET: 'x86-windows-static'
        CMAKE_GENERATOR: 'Visual Studio 16 2019'
        CMAKE_GENERATOR_PLATFORM: Win32
        UNIT_TESTING: ON
      Win_x64_Test:
        vm.image: 'windows-2019'
        vcpkg.deps: 'curl[winssl] cmocka'
        VCPKG_DEFAULT_TRIPLET: 'x64-windows-static'
        CMAKE_GENERATOR: 'Visual Studio 16 2019'
        CMAKE_GENERATOR_PLATFORM: x64
        UNIT_TESTING: ON
      MacOS_x64_Test:
        vm.image: 'macOS-10.14'
        vcpkg.deps: 'curl[ssl] cmocka'
        VCPKG_DEFAULT_TRIPLET: 'x64-osx'
        UNIT_TESTING: ON
  pool:
    vmImage: $(vm.image)
  steps:
  - checkout: self
    submodules: recursive

  # Mac OS specific requirements
  - task: Bash@3
    inputs:
      targetType: inline
      script: |
        sudo xcode-select --switch /Applications/Xcode_9.4.1.app
        echo "xcode path:"
        sudo xcode-select --print-path

        # Expect failure:
        brew install gcc
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        ./bootstrap-vcpkg.sh

        # Validate that vcpkg bootstrap succeeded
        ./vcpkg version
        if [ $? -ne 0 ]
        then
          echo "./bootstrap-vcpkg.sh FAILED"
          exit 1
        fi

        echo "##vso[task.prependpath]$(pwd)"
        echo "##vso[task.setvariable variable=VCPKG_INSTALLATION_ROOT;]$(pwd)"

    condition: contains(variables['vm.image'], 'macOS')
    displayName: vcpkg bootstrap


  - script: |
      vcpkg install $(vcpkg.deps)
    displayName: vcpkg install dependencies

  - task: CMake@1
    inputs:
      cmakeArgs: --version
    displayName: cmake version
  - task: CMake@1
    inputs:
      cmakeArgs: -Duse_default_uuid=ON ..
    displayName: cmake generate
  - task: CMake@1
    inputs:
      cmakeArgs: --build .
    displayName: cmake build

  - script: |
      ctest -C Debug
    workingDirectory: build
    displayName: ctest
    condition: eq('ON', variables['UNIT_TESTING'])
